{"version":3,"sources":["Hoc/withAuthRedirect.js","Components/Dialogs/Messages/Messages.module.css","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogName/DialogName.module.css","Components/Dialogs/DialogName/DialogName.jsx","Components/Dialogs/Messages/AddMessageForm.js","Components/Dialogs/Messages/Messages.js","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.js"],"names":["withAuthRedirect","Component","connect","state","isAuth","auth","props","to","module","exports","DialogName","namesArray","nameData","map","name","index","linkPath","path","className","style","dialog","key","activeClassName","active","src","avatar","alt","dialogNamesWrapper","dialogNames","maxLength100","maxLength","reduxForm","form","handleSubmit","reset","addMessage","dialogId","messageId","onSubmit","values","newMessage","styles","addMessageForm","Field","type","component","TextArea","validate","required","Messages","messages","firstTalker","id","getMessageStyle","talker","talkerFirst","talkerSecond","messagesArray","message","text","Dialogs","dialogsPage","dialogMessages","routePath","render","dialogsWrapper","exact","greeting","compose"],"mappings":"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","file":"static/js/5.e5310c97.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login' />\r\n        return <Component { ...props } />\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({ isAuth: state.auth.isAuth })\r\n    \r\n    return connect(mapStateToProps)(RedirectComponent)\r\n\r\n}\r\n\r\nexport default withAuthRedirect","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__iIGY7\",\"talker\":\"Messages_talker__1MIyn\",\"talkerFirst\":\"Messages_talkerFirst__1PmnF\",\"talkerSecond\":\"Messages_talkerSecond__25-pf\",\"addMessageForm\":\"Messages_addMessageForm__Z7JYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__2BsfM\",\"dialogNames\":\"Dialogs_dialogNames__1bN4u\",\"dialog\":\"Dialogs_dialog__2XvMI\",\"active\":\"Dialogs_active__429e6\",\"messages\":\"Dialogs_messages__2sRsc\",\"message\":\"Dialogs_message__1Tw5j\",\"greeting\":\"Dialogs_greeting__1Bbo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogNamesWrapper\":\"DialogName_dialogNamesWrapper___U0Ha\",\"dialogNames\":\"DialogName_dialogNames__2qUDd\",\"dialog\":\"DialogName_dialog__2Tzd4\",\"active\":\"DialogName_active__Vvx_C\"};","import React from 'react';\r\nimport style from './DialogName.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogName = ( { nameData } ) => {\r\n\r\n    const namesArray = nameData.map( (name, index) => {\r\n        let linkPath = '/dialogs/' + name.path;\r\n        return (\r\n            <div className={style.dialog} key={index}>\r\n                <NavLink to = { linkPath } activeClassName = { style.active }>\r\n                    <img src = { name.avatar } alt=\"Avatar\"/>{name.name}\r\n                </NavLink>\r\n            </div>\r\n        )\r\n    }\r\n    )\r\n\r\n    return (\r\n        <div className={style.dialogNamesWrapper}>\r\n            <div className={style.dialogNames}>\r\n                { namesArray }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogName;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport styles from './Messages.module.css'\r\nimport { TextArea } from '../../Common/FormControle/FormControle';\r\nimport { required, maxLength } from '../../../Utils/Validators';\r\n\r\nconst maxLength100 = maxLength(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    const { handleSubmit, reset, addMessage, dialogId, messageId } = props;\r\n\r\n    const sendMessage = (values) => {\r\n        addMessage(dialogId, messageId, values.newMessage)\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(sendMessage)} className={styles.addMessageForm}>\r\n            <Field \r\n                name='newMessage' \r\n                type='text' \r\n                component={TextArea} \r\n                validate = {[required, maxLength100]}\r\n            />\r\n            <button type='submit'>Send message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'newMessage' })(AddMessageForm)\r\n","import React from 'react';\r\nimport styles from './Messages.module.css';\r\nimport AddMessageForm from './AddMessageForm';\r\n\r\n\r\nconst Messages = ( props ) => {\r\n\r\n    const { dialogId, messages, addMessage} = props;\r\n    const firstTalker = messages[0].id;\r\n\r\n    const getMessageStyle = (messageId) => {\r\n        const {talker, talkerFirst, talkerSecond} = styles;\r\n        return (messageId === firstTalker) \r\n            ? `${talker} ${talkerFirst}` \r\n            : `${talker} ${talkerSecond}`;\r\n    }\r\n    \r\n    const messagesArray = messages.map((message, index) => \r\n        <div className={getMessageStyle(message.id)} key={message.id + index}>{message.text}</div> )\r\n\r\n    return (\r\n        <div className={styles.messages}>\r\n            {messagesArray}\r\n            <AddMessageForm addMessage={addMessage} dialogId={dialogId} messageId={firstTalker} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogName from './DialogName/DialogName';\r\nimport { Route } from 'react-router-dom';\r\nimport Messages from './Messages/Messages';\r\n\r\n\r\n\r\n\r\nconst Dialogs = ( props ) => {\r\n\r\n    const { dialogsPage } = props;\r\n    const {addMessage} = props;\r\n\r\n    const dialogMessages = dialogsPage.map( (dialog, index) => {\r\n        const {id: dialogId, messages, path} = dialog \r\n        const routePath = '/dialogs/' + path;\r\n        return(\r\n            <Route path = { routePath } key= { index }\r\n                render = { () => <Messages dialogId={dialogId} messages={messages}\r\n                    addMessage={addMessage} /> }  \r\n            />\r\n        )\r\n    } )\r\n\r\n    const nameData = dialogsPage.map( (dialog) => {\r\n        const {path, name, avatar} = dialog\r\n        return ({ path, name, avatar })\r\n    } )\r\n\r\n    return (\r\n        <div className={style.dialogsWrapper}>\r\n            <DialogName nameData = {nameData} />\r\n            {dialogMessages}\r\n            <Route \r\n                exact path='/dialogs'\r\n                render={() =>\r\n                    <span className={style.greeting}>\r\n                        Please, choose a dialog<br />or create a new one.\r\n                    </span> } \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport withAuthRedirect from '../../Hoc/withAuthRedirect';\r\nimport { addMessage } from '../../Redux/dialogsReducer';\r\n\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage \r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect( mapStateToProps, {addMessage} ), \r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}